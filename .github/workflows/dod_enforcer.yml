name: DoD Enforcer

on:
  pull_request:
    types: [opened, edited, synchronize, ready_for_review, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  enforce:
    name: Enforce DoD Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Check DoD compliance in PR body
        uses: actions/github-script@v7
        with:
          script: |
            const body = (context.payload.pull_request.body || "");

            // Required DoD items (fallback exact match; policy.yml„É≠„Éº„Éâ„ÅØÂæåÁ∂öÂº∑Âåñ„Åß)
            const required = [
              "Auto-merge (squash) ÊúâÂäπÂåñ",
              "CI ÂøÖÈ†à„ÉÅ„Çß„ÉÉ„ÇØ GreenÔºàtest-and-artifacts, healthcheckÔºâ",
              "merged == true „Çí API „ÅßÁ¢∫Ë™ç",
              "PR „Å´ÊúÄÁµÇ„Ç≥„É°„É≥„ÉàÔºà‚úÖ merged / commit hash / CI run URL / evidenceÔºâ",
              "ÂøÖË¶Å„Å™Ë®ºË∑°Ôºà‰æã: reports/*Ôºâ„ÇíÊõ¥Êñ∞"
            ];

            const missing = required.filter(item => !body.includes(item));

            const notice = async (msg) => {
              try {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  body: msg
                });
              } catch (e) {
                core.warning("comment failed: " + e.message);
              }
            };

            if (missing.length) {
              const msg = "üö® **DoD Compliance Check Failed**\\n\\n"
                + "Missing required DoD items:\\n"
                + missing.map(m => "- " + m).join("\\n")
                + "\\n\\nReference: `.ops/dod/policy.yml`";
              await notice(msg);
              core.setFailed("DoD missing: " + missing.join(", "));
            } else {
              core.notice("‚úÖ DoD OK");
              // ÊàêÂäü„Ç≥„É°„É≥„Éà„ÅØÊäëÂà∂ÔºàÂøÖË¶Å„Å™„ÇâÊäïÁ®ø„Å´ÂàáÊõøÂèØÔºâ
            }

      - name: G1 Gate: Workflow changes detector
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const changed = files.filter(f => f.filename.startsWith(".github/workflows/"));
            if (changed.length) {
              const list = changed.map(f => "- " + f.filename).join("\\n");
              const msg = "üöß **G1 Gate Triggered: Workflow Changes Detected**\\n\\n"
                + "This PR modifies workflow files:\\n" + list + "\\n\\n"
                + "**Rule:** CODEOWNERS approval required; auto-merge disabled.\\n"
                + "Reference: `.ops/dod/policy.yml` - G1 Gate";
              try {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  body: msg
                });
              } catch(e) {}
            }

      - name: DoD structure lint (soft warning)
        uses: actions/github-script@v7
        with:
          script: |
            const body = (context.payload.pull_request.body || "");
            const hasSection = body.includes("DoDÔºàÂÖ±ÈÄöÔºèÂøÖÈ†àÔºâ") || body.includes("## DoD");
            const hasRef = body.includes(".ops/dod/policy.yml");
            const hasEvidence = body.includes("Ë®ºË∑°") || body.includes("Evidence");
            let warn = [];
            if (!hasSection) warn.push("Missing DoD section header");
            if (!hasRef) warn.push("Missing policy reference");
            if (!hasEvidence) warn.push("Missing Evidence section");
            if (warn.length) core.warning("DoD structure issues: " + warn.join(" | "));