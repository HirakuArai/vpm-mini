name: Render Grafana PNG

on:
  workflow_dispatch:
    inputs:
      from:
        description: "From time (Grafana time range)"
        required: false
        default: "now-30m"
      to:
        description: "To time"
        required: false
        default: "now"
      force_fail:
        description: "Force workflow failure (testing)"
        required: false
        default: "false"
  schedule:
    - cron: "0 22 * * *"  # 07:00 JST
  repository_dispatch:
    types:
      - render_request

jobs:
  render:
    runs-on: [self-hosted, k8s-runner]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Prepare params
        id: prep
        run: |
          FROM="${{ github.event.inputs.from || github.event.client_payload.from || 'now-30m' }}"
          TO="${{ github.event.inputs.to   || github.event.client_payload.to   || 'now' }}"
          echo "from=$FROM" >> $GITHUB_OUTPUT
          echo "to=$TO"     >> $GITHUB_OUTPUT
          FORCE_FAIL="${{ github.event.inputs.force_fail || 'false' }}"
          echo "force_fail=$FORCE_FAIL" >> $GITHUB_OUTPUT

      - name: Render dashboard (anonymous, in-cluster)
        run: |
          if [ "${{ steps.prep.outputs.force_fail }}" = "true" ]; then
            echo "Force failure requested"
            exit 1
          fi
          BASE="http://grafana.monitoring.svc.cluster.local"
          DASH_UID="evidence-prod"
          DASH_SLUG="evidence-e28093-prod"
          AUTH_FLAGS=()
          if [ -n "${render_user:-}" ] && [ -n "${render_pass:-}" ]; then
            AUTH_FLAGS=(-u "${render_user}:${render_pass}")
          fi
          curl -sSf "${AUTH_FLAGS[@]}" -G "$BASE/render/d-solo/$DASH_UID/$DASH_SLUG" \
            --data-urlencode "from=${{ steps.prep.outputs.from }}" \
            --data-urlencode "to=${{ steps.prep.outputs.to }}" \
            --data-urlencode "orgId=1" \
            --data-urlencode "panelId=1" \
            --output out.png

      - name: Attach evidence log footer
        run: |
          echo "== FOOTER == VALIDATE: OK (Grafana /render)" >> evidence.log

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: grafana-render
          path: |
            out.png
            evidence.log

  notify-on-failure:
    needs: render
    if: ${{ failure() }}
    runs-on: [self-hosted, k8s-runner]
    steps:
      - name: Open issue on failure
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          title="Render Grafana PNG failed on ${{ github.ref_name }} (${{ github.run_id }})"
          body=$(cat <<'EOF'
Auto-opened because /render job failed.

Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
Commit: ${{ github.sha }}
EOF
)
          ISSUE_JSON=$(ISSUE_TITLE="$title" ISSUE_BODY="$body" python - <<'PY'
import json
import os
print(json.dumps({
    "title": os.environ["ISSUE_TITLE"],
    "body": os.environ["ISSUE_BODY"],
    "labels": ["evidence", "monitoring", "runner"],
}))
PY
)
          response=$(echo "$ISSUE_JSON" | curl -sS -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d @- \
            "${{ github.api_url }}/repos/${{ github.repository }}/issues")
          echo "$response" | python - <<'PY'
import json
import sys
resp=json.load(sys.stdin)
url=resp.get("html_url")
if url:
    print("Issue created:", url)
else:
    print("Issue creation may have failed:", resp)
PY

# tick: 2025-10-21T14:32:22Z

  debug_hello:
    name: Debug Hello
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo RUN_ID=${{ github.run_id }}
          echo EVENT=${{ github.event_name }}
          echo REF=${{ github.ref }}
