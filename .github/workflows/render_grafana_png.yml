# touch: refresh dispatch recognition
name: Render Grafana PNG

on:
  workflow_dispatch:
    inputs:
      from:
        description: "From time (Grafana time range)"
        required: false
        default: "now-30m"
      to:
        description: "To time"
        required: false
        default: "now"
      force_fail:
        description: "Force workflow failure (testing)"
        required: false
        default: "false"
  schedule:
    - cron: "*/5 * * * *"  # TEMP: every 5min

jobs:
  render:
    runs-on: [self-hosted, k8s-runner]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Prepare params
        id: prep
        run: |
          FROM="${{ github.event.inputs.from || 'now-30m' }}"
          TO="${{ github.event.inputs.to   || 'now' }}"
          echo "from=$FROM" >> $GITHUB_OUTPUT
          echo "to=$TO"     >> $GITHUB_OUTPUT
          FORCE_FAIL="${{ github.event.inputs.force_fail || 'false' }}"
          echo "force_fail=$FORCE_FAIL" >> $GITHUB_OUTPUT

      - name: Render dashboard (anonymous, in-cluster)
        run: |
          if [ "${{ steps.prep.outputs.force_fail }}" = "true" ]; then
            echo "Force failure requested"
            exit 1
          fi
          BASE="http://grafana.monitoring.svc.cluster.local"
          DASH_UID="a128c0c0-c3f9-43e6-8476-dac42fe03110"
          DASH_SLUG="evidence-smoke"
          AUTH_FLAGS=()
          if [ -n "${render_user:-}" ] && [ -n "${render_pass:-}" ]; then
            AUTH_FLAGS=(-u "${render_user}:${render_pass}")
          fi
          curl -sSf "${AUTH_FLAGS[@]}" -G "$BASE/render/d-solo/$DASH_UID/$DASH_SLUG" \
            --data-urlencode "from=${{ steps.prep.outputs.from }}" \
            --data-urlencode "to=${{ steps.prep.outputs.to }}" \
            --data-urlencode "orgId=1" \
            --data-urlencode "panelId=1" \
            --output out.png

      - name: Attach evidence log footer
        run: |
          echo "== FOOTER == VALIDATE: OK (Grafana /render)" >> evidence.log

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: grafana-render
          path: |
            out.png
            evidence.log

  notify-on-failure:
    needs: render
    if: ${{ failure() }}
    runs-on: [self-hosted, k8s-runner]
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const runId = context.runId;
            const title = `Render Grafana PNG failed on ${context.ref} (${runId})`;
            const body = [
              'Auto-opened because /render job failed.',
              '',
              `Run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`,
              `Commit: ${context.sha}`
            ].join('\n');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
              labels: ['evidence','monitoring','runner'],
            });
