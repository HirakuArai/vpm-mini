name: diag-required-vs-reported

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  checks: read
  pull-requests: write
  issues: write

jobs:
  diag:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      HEAD_SHA: ${{ github.event.pull_request.head.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (PyYAML)
        run: |
          python -V
          pip install --disable-pip-version-check --quiet pyyaml

      - name: Read required from config (PyYAML)
        id: req
        run: |
          python - <<'PY' > required.json
          import json, pathlib, yaml
          cfg = yaml.safe_load(pathlib.Path("config/understanding.yaml").read_text(encoding="utf-8")) or {}
          lst = cfg.get("ruleset_required", []) or []
          req = sorted({str(x).strip() for x in lst if str(x).strip()})
          print(json.dumps(req, ensure_ascii=False))
          PY
          echo "required=$(cat required.json)" >> "$GITHUB_OUTPUT"

      - name: Collect reported check-runs
        id: rep
        run: |
          gh api repos/${{ github.repository }}/commits/${HEAD_SHA}/check-runs \
            -H "Accept: application/vnd.github+json" --jq '.check_runs[].name' |
          jq -R -s 'split("\n")|map(select(length>0))|unique|sort' > reported.json
          echo "reported=$(cat reported.json)" >> "$GITHUB_OUTPUT"

      - name: Build diff
        id: diff
        run: |
          python - <<'PY' > diff.json
          import json
          req = json.load(open('required.json'))
          rep = json.load(open('reported.json'))
          A, B = set(req), set(rep)
          out = {
            "required": sorted(A),
            "reported": sorted(B),
            "missing": sorted(A - B),
            "extra":    sorted(B - A),
          }
          json.dump(out, open('diff.json', 'w'), ensure_ascii=False, indent=2)
          PY
          cat diff.json

      - name: Upsert PR comment
        run: |
          MARK="<!-- diag-required-vs-reported -->"
          REQ=$(jq -r '.required|join(", ")' diff.json)
          REP=$(jq -r '.reported|join(", ")' diff.json)
          MIS=$(jq -r '.missing|join(", ")' diff.json)
          EXT=$(jq -r '.extra|join(", ")' diff.json)
          BODY="$MARK
          ### Diag: required vs reported
          **required**: $REQ
          **reported**: $REP
          **missing**: $MIS
          **extra**: $EXT
          "
          CID=$(gh api repos/${{ github.repository }}/issues/${PR_NUMBER}/comments \
                --jq '.[] | select(.body|contains("diag-required-vs-reported")) | .id' || true)
          if [ -n "$CID" ]; then
            gh api repos/${{ github.repository }}/issues/comments/$CID -X PATCH -f body="$BODY" >/dev/null
          else
            gh api repos/${{ github.repository }}/issues/${PR_NUMBER}/comments -f body="$BODY" >/dev/null
          fi
