name: diag-required-vs-reported

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to comment to (manual test)"
        required: true

permissions:
  contents: read
  checks: read
  pull-requests: write
  issues: write

jobs:
  diag:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (PyYAML only)
        run: pip install --disable-pip-version-check --quiet pyyaml

      - name: Resolve PR number
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "PR_NUMBER=${{ github.event.inputs.pr_number }}" >> "$GITHUB_ENV"
          else
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> "$GITHUB_ENV"
          fi

      - name: Resolve head sha
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            HEAD_SHA=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.inputs.pr_number }} --jq .head.sha)
          else
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          fi
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"

      - name: Read required from config (robust YAML)
        id: req
        shell: bash
        run: |
          python - <<'PY' > required.json
import json, pathlib, yaml
cfg = yaml.safe_load(pathlib.Path("config/understanding.yaml").read_text(encoding="utf-8")) or {}
lst = cfg.get("ruleset_required", []) or []
req = sorted({str(x).strip() for x in lst if str(x).strip()})
print(json.dumps(req, ensure_ascii=False))
PY
          echo "required=$(cat required.json)" >> "$GITHUB_OUTPUT"

      - name: Collect reported check-runs
        id: rep
        shell: bash
        run: |
          gh api repos/${{ github.repository }}/commits/$HEAD_SHA/check-runs \
            -H "Accept: application/vnd.github+json" --jq '.check_runs[].name' |
          jq -R -s 'split("\n")|map(select(length>0))|unique|sort' > reported.json
          echo "reported=$(cat reported.json)" >> "$GITHUB_OUTPUT"

      - name: Build diff
        id: diff
        run: |
          jq -n --argjson A '${{ steps.req.outputs.required }}' --argjson B '${{ steps.rep.outputs.reported }}' \
            '{required:$A, reported:$B, missing: ($A - $B), extra: ($B - $A)}' > diff.json
          cat diff.json

      - name: Upsert PR comment
        run: |
          PR=$PR_NUMBER
          MARK="<!-- diag-required-vs-reported -->"
          REQ=$(jq -r '.required|join(", ")' diff.json)
          REP=$(jq -r '.reported|join(", ")' diff.json)
          MIS=$(jq -r '.missing|join(", ")' diff.json)
          EXT=$(jq -r '.extra|join(", ")' diff.json)
          BODY="$MARK
### Diag: required vs reported
**required**: $REQ
**reported**: $REP
**missing**: $MIS
**extra**: $EXT
"
          CID=$(gh api repos/${{ github.repository }}/issues/$PR/comments \
                --jq '.[] | select(.body|contains("diag-required-vs-reported")) | .id' || true)
          if [ -n "$CID" ]; then
            gh api repos/${{ github.repository }}/issues/comments/$CID -X PATCH -f body="$BODY" >/dev/null
          else
            gh api repos/${{ github.repository }}/issues/$PR/comments -f body="$BODY" >/dev/null
          fi
