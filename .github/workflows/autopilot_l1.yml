name: Autopilot L1 - Limited Autonomous Loop

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode (no actual changes)'
        required: false
        default: true
        type: boolean
      max_lines:
        description: 'Maximum lines to change per run'
        required: false
        default: '3'
        type: string
      project:
        description: 'Project namespace'
        required: false
        default: 'vpm-mini'
        type: string

  # Schedule for automated runs (disabled by default)
  # schedule:
  #   - cron: '0 9 * * 1-5'  # Weekdays at 9 AM UTC

jobs:
  autopilot-scan:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: write
      pull-requests: write
      issues: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 50  # Sufficient history for change analysis

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML requests

    - name: Run autopilot scan
      id: scan
      run: |
        # Make script executable
        chmod +x scripts/autopilot_l1.sh

        # Run autopilot with input parameters
        ./scripts/autopilot_l1.sh \
          --project="${{ github.event.inputs.project || 'vpm-mini' }}" \
          --dry-run="${{ github.event.inputs.dry_run || 'true' }}" \
          --max-lines="${{ github.event.inputs.max_lines || '3' }}"

    - name: Check scan results
      id: results
      run: |
        # Check for JSON output from autopilot script
        JSON_FILE=$(ls reports/autopilot_l1_scan_*.json 2>/dev/null | head -n1 || echo "")
        if [ -n "$JSON_FILE" ] && [ -f "$JSON_FILE" ]; then
          CHANGES_FOUND=$(python3 -c "
import json
with open('$JSON_FILE') as f:
    data = json.load(f)
print(data.get('scan_results', {}).get('changes_identified', 0))
")
          echo "changes_found=$CHANGES_FOUND" >> $GITHUB_OUTPUT
          echo "json_file=$JSON_FILE" >> $GITHUB_OUTPUT
        else
          echo "changes_found=0" >> $GITHUB_OUTPUT
          echo "json_file=" >> $GITHUB_OUTPUT
        fi

    - name: Create autopilot PR
      if: steps.results.outputs.changes_found > 0 && github.event.inputs.dry_run != 'true'
      run: |
        echo "ðŸš§ Autopilot L1 placeholder: PR creation disabled until real implementation"
        echo "Changes would have been applied with:"
        echo "- Project: ${{ github.event.inputs.project || 'vpm-mini' }}"
        echo "- Max Lines: ${{ github.event.inputs.max_lines || '3' }}"
        echo "- Changes Found: ${{ steps.results.outputs.changes_found }}"

    - name: Upload scan results
      uses: actions/upload-artifact@v4
      with:
        name: autopilot-l1-results
        path: |
          reports/autopilot_l1_*.md
          reports/autopilot_l1_*.json
        retention-days: 30

    - name: Summary
      run: |
        echo "## Autopilot L1 Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Mode**: ${{ github.event.inputs.dry_run == 'true' && 'Dry Run' || 'Live Execution' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Project**: ${{ github.event.inputs.project || 'vpm-mini' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Max Lines**: ${{ github.event.inputs.max_lines || '3' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Changes Found**: ${{ steps.results.outputs.changes_found }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -n "${{ steps.results.outputs.json_file }}" ]; then
          echo "### Evidence Generated" >> $GITHUB_STEP_SUMMARY
          echo "- JSON Report: ${{ steps.results.outputs.json_file }}" >> $GITHUB_STEP_SUMMARY
          echo "- Evidence Report: Available in artifacts" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Result" >> $GITHUB_STEP_SUMMARY
          echo "Preflight checks completed successfully" >> $GITHUB_STEP_SUMMARY
        fi