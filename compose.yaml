version: "3.9"
x-app: &app
  build:
    context: .
    dockerfile: Dockerfile
  image: vpm-mini/app:dev
  restart: unless-stopped
  environment:
    - ROLE=
    - REDIS_HOST=redis
    - PORT=
    - TRACE_ID=
    - METRICS_PORT=
  healthcheck:
    # S4で /healthz に差し替え予定。暫定は常に0でOKな軽量チェック
    test: [CMD, curl, -fsS, 'http://localhost:8005/healthz']
    interval: 10s
    timeout: 3s
    retries: 5
  deploy:
    replicas: 1
  command:
    - bash
    - -c
    - python playground.py --role ${ROLE:-watcher} --hello & python playground.py --healthz
services:
  watcher:
    !!merge <<: *app
    environment:
      - ROLE=watcher
      - PORT=8001
      - TRACE_ID=
      - METRICS_PORT=9001
    healthcheck:
      test: ["CMD","curl","-fsS","http://localhost:8001/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "9001:9001"
  curator:
    !!merge <<: *app
    environment:
      - ROLE=curator
      - PORT=8002
      - TRACE_ID=
      - METRICS_PORT=9002
    healthcheck:
      test: ["CMD","curl","-fsS","http://localhost:8002/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "9002:9002"
  planner:
    !!merge <<: *app
    environment:
      - ROLE=planner
      - PORT=8003
      - TRACE_ID=
      - METRICS_PORT=9003
    healthcheck:
      test: ["CMD","curl","-fsS","http://localhost:8003/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "9003:9003"
  synthesizer:
    !!merge <<: *app
    environment:
      - ROLE=synthesizer
      - PORT=8004
      - TRACE_ID=
      - METRICS_PORT=9004
    healthcheck:
      test: ["CMD","curl","-fsS","http://localhost:8004/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "9004:9004"
  archivist:
    !!merge <<: *app
    environment:
      - ROLE=archivist
      - PORT=8005
      - TRACE_ID=
      - METRICS_PORT=9005
    healthcheck:
      test: ["CMD","curl","-fsS","http://localhost:8005/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "9005:9005"
  redis:
    image: redis:7
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 5s
      timeout: 3s
      retries: 10
