NS ?= monitoring
PID_FILE ?= /tmp/grafana-port-forward.pid
LOG_FILE ?= /tmp/grafana-port-forward.log

.PHONY: grafana-open grafana-start grafana-stop

grafana-open:
	@URL=http://localhost:3000; \
	if command -v open >/dev/null 2>&1; then \
		open $$URL; \
	elif command -v xdg-open >/dev/null 2>&1; then \
		xdg-open $$URL; \
	else \
		echo "Open $$URL in your browser"; \
	fi

grafana-start:
	@set -euo pipefail; \
	SVC=$$(kubectl -n $(NS) get svc -l app.kubernetes.io/name=grafana -o jsonpath='{.items[0].metadata.name}'); \
	if [ -z "$$SVC" ]; then \
		echo "Grafana Service not found in ns=$(NS)" >&2; exit 1; \
	fi; \
	if [ -f $(PID_FILE) ]; then \
		PID=$$(cat $(PID_FILE)); \
		if ps -p $$PID >/dev/null 2>&1; then \
			echo "Port-forward already running (PID=$$PID). Use 'make -f Makefile.grafana grafana-stop' first."; exit 0; \
		else \
			rm -f $(PID_FILE); \
		fi; \
	fi; \
	nohup kubectl -n $(NS) port-forward svc/$$SVC 3000:80 >$(LOG_FILE) 2>&1 & echo $$! > $(PID_FILE); \
	echo "Grafana at http://localhost:3000 (PID=$$(cat $(PID_FILE)))"

grafana-stop:
	@set -euo pipefail; \
	if [ -f $(PID_FILE) ]; then \
		PID=$$(cat $(PID_FILE)); \
		if kill $$PID 2>/dev/null; then \
			echo "Stopped port-forward (PID=$$PID)"; \
		else \
			echo "No running process found for PID=$$PID"; \
		fi; \
		rm -f $(PID_FILE); \
	else \
		echo "No PID file at $(PID_FILE). Nothing to stop."; \
	fi
