# Snapshot: phase3-4-chaos-green

**Generated**: {{timestamp}}  
**Git Hash**: {{git_hash}}  
**Branch**: {{branch}}  

## DoD Status
Chaos scenarios (pod-kill & latency injection) verified; SLO 99% maintained under failure conditions; Reliability proven

## Changes Summary
Added chaos engineering infrastructure with Toxiproxy, pod-kill scenarios, latency injection, and SLO verification tools

## Evidence
- Feature PR: {{pr_url}} (MERGED)
- Pod-kill scenario: availability={{podkill_availability:.1%}}, p50={{podkill_p50:.0f}}ms, errors={{podkill_errors:.1%}}
- Latency scenario: availability={{latency_availability:.1%}}, p50={{latency_p50:.0f}}ms, errors={{latency_errors:.1%}}

## Chaos Infrastructure
- **Toxiproxy**: chaos-engineering/toxiproxy (latency injection proxy)
- **Load Generator**: Python asyncio-based (configurable RPS/duration)
- **Pod Kill**: Random pod termination with safety checks
- **SLO Verification**: Prometheus-based SLI collection and evaluation

## Scenario Results

### Scenario A: Pod Kill Chaos
- **Duration**: {{podkill_duration}}s
- **Interval**: {{podkill_interval}}s between kills
- **Target**: {{chaos_selector}} in {{chaos_namespace}}
- **SLO Status**: {{podkill_slo_status}}
- **Metrics**:
  - Availability: {{podkill_availability:.1%}} (target: ≥99%)
  - P50 Latency: {{podkill_p50:.0f}}ms (target: ≤1000ms)  
  - Error Rate: {{podkill_errors:.1%}} (target: ≤1%)

### Scenario B: Latency Injection
- **Duration**: {{latency_duration}}s  
- **Injection**: {{latency_base}}ms ± {{latency_jitter}}ms
- **Proxy**: toxiproxy ({{toxiproxy_endpoint}})
- **SLO Status**: {{latency_slo_status}}
- **Metrics**:
  - Availability: {{latency_availability:.1%}} (target: ≥99%)
  - P50 Latency: {{latency_p50:.0f}}ms (target: ≤1000ms)
  - Error Rate: {{latency_errors:.1%}} (target: ≤1%)

## Prometheus Queries
- Availability: `sum(rate(knative_revision_request_count{response_code=~"2.."}[5m])) / sum(rate(knative_revision_request_count[5m]))`
- P50 Latency: `histogram_quantile(0.5, sum by (le) (rate(knative_revision_request_latencies_bucket[5m]))) * 1000`
- Error Rate: `sum(rate(knative_revision_request_count{response_code=~"[45].."}[5m])) / sum(rate(knative_revision_request_count[5m]))`

## Recent Commits
```
{{recent_commits}}
```

## Changed Files (last commit)
```
{{changed_files}}
```

## System State
- Repository: vpm-mini
- Phase: Phase 3
- Status: phase3-4-chaos-green completed ✅

---
*Auto-generated by Phase 3-4 chaos verification*